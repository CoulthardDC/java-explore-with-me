DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS events;

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name VARCHAR(255)  NOT NULL,
    user_email VARCHAR(255) NOT NULL,
    CONSTRAINT UNIQUE_USER_EMAIL UNIQUE(user_email)
);

CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(255)  NOT NULL,
    CONSTRAINT UNIQUE_CAETGORY_NAME UNIQUE(category_name)
);

CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_annotation VARCHAR(500) NOT NULL,
    event_category_id BIGINT NOT NULL,
    event_confirmed_requests BIGINT,
    event_created_on TIMESTAMP NOT NULL,
    event_desription VARCHAR(500) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    event_initiator_id BIGINT NOT NULL,
    event_lat REAL NOT NULL,
    event_lot REAL NOT NULL,
    event_paid BOOLEAN DEFAULT false,
    event_participant_limit INT,
    event_published_on TIMESTAMP NOT NULL,
    event_request_moderation BOLEAN DEFAULT true,
    event_state VARCHAR(255) NOT NULL,
    event_title VARCHAR(255) NOT NULL UNIQUE,
    event_views BIGINT,
    CONSTRAINT events_users_id_fk FOREIGN KEY (event_initiator_id) REFERENCES users(user_id),
    CONSTRAINT events_categories_id_fk FOREIGN KEY (event_category_id)  REFERENCES categories(category_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    request_requester_id BIGINT NOT NULL,
    request_event_id BIGINT NOT NULL,
    request_created TIMESTAMP DEFAULT now(),
    request_status VARCHAR(32) NOT NULL,
    CONSTRAINT request_requester_id_request_event_id_unique UNIQUE (request_requester_id, request_event_id),
    CONSTRAINT requests_users_id_fk FOREIGN KEY (request_requester_id) REFERENCES users (user_id),
    CONSTRAINT requests_events_id_fk FOREIGN KEY (request_event_id) REFERENCES events (event_id)
);